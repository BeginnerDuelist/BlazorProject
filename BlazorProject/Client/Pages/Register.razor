@page "/register"
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Register</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="user" OnValidSubmit="HandleRegistration">
                        <DataAnnotationsValidator />
                        <div class="mb-3">
                            <label for="email">Email</label>
                            <InputText id="email" @bind-Value="user.Email" class="form-control" />
                            <ValidationMessage For="@(() => user.Email)" />
                        </div>
                        <div class="mb-3">
                            <label for="password">Password</label>
                            <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
                            <ValidationMessage For="@(() => user.Password)" />
                        </div>
                        <div class="mb-3">
                            <label for="confirmPassword">Confirm Password</label>
                            <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
                            <ValidationMessage For="@(() => user.ConfirmPassword)" />
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <button type="submit" class="btn btn-primary">Register</button>
                            <div class="@messageCssClass">
                                <span>@message</span>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (result.Success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";
    }
}
